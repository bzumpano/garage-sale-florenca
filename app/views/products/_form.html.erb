<%= form_with(model: product, local: true, html: { class: 'space-y-6 bg-white p-6 rounded shadow max-w-xl mx-auto', multipart: true, data: { direct_upload: true } }) do |form| %>
  <% if product.errors.any? %>
    <div class="mb-4 p-4 rounded bg-red-100 text-red-800 border border-red-200">
      <h2 class="font-bold mb-2"><%= pluralize(product.errors.count, "erro") %> proibiu este produto de ser salvo:</h2>
      <ul class="list-disc pl-5">
        <% product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <div>
    <%= form.label :name, t('products.form.name'), class: 'block font-medium text-gray-700 mb-1' %>
    <%= form.text_field :name, class: 'block w-full border border-gray-300 rounded px-3 py-2', required: true %>
  </div>
  <div>
    <%= form.label :details, t('products.form.details'), class: 'block font-medium text-gray-700 mb-1' %>
    <%= form.rich_text_area :details, class: 'block w-full border border-gray-300 rounded px-3 py-2 trix-content' %>
  </div>
  <div>
    <%= form.label :price, t('products.form.price'), class: 'block font-medium text-gray-700 mb-1' %>
    <%= form.text_field :price, type: 'number', inputmode: 'decimal', step: '0.01', class: 'block w-full border border-gray-300 rounded px-3 py-2', id: 'product_price', autocomplete: 'off', required: true %>
  </div>
  <div>
    <%= form.label :images, t('products.form.images', default: 'Imagens'), class: 'block font-medium text-gray-700 mb-1' %>
    <div id="dynamic-image-inputs" class="flex flex-wrap gap-4 mt-2"></div>
    <button type="button" id="add-image-btn" class="mt-2 px-4 py-2 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition"><i class="fa fa-plus mr-1"></i>Adicionar imagem</button>
    <div id="uploaded-images-preview" class="flex flex-wrap gap-4 mt-4"></div>
    <% if product.images.attached? %>
      <div class="flex flex-wrap gap-4 mt-4" id="existing-images-preview">
        <% product.images.each do |image| %>
          <div class="relative group">
            <%= image_tag image.variant(resize_to_limit: [120, 120]), class: 'rounded border w-24 h-24 object-cover' %>
            <button type="button" class="absolute top-0 right-0 bg-white bg-opacity-80 rounded-full p-1 m-1 shadow text-red-600 hover:bg-opacity-100 transition remove-image-btn" data-image-id="<%= image.id %>">
              <i class="fa fa-times"></i>
            </button>
            <%= form.hidden_field :remove_image_ids, value: '', id: "remove_image_ids_#{image.id}" %>
          </div>
        <% end %>
      </div>
    <% end %>
    <div class="text-sm text-gray-500 mt-2">Máximo de 20 imagens, cada uma até 10MB. Apenas arquivos de imagem são permitidos.<br>Em dispositivos móveis, você pode tirar uma foto ou escolher da galeria. O navegador pode pedir permissão para acessar a câmera ou arquivos.</div>
  </div>
  <div>
    <%= form.submit t('products.form.submit'), class: 'px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition' %>
  </div>
<% end %>
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Remove image logic
  document.querySelectorAll('.remove-image-btn').forEach(function(btn) {
    btn.addEventListener('click', function() {
      var imageId = btn.getAttribute('data-image-id');
      var hiddenField = document.getElementById('remove_image_ids_' + imageId);
      if (hiddenField) {
        hiddenField.value = imageId;
        btn.closest('.group').style.display = 'none';
      }
    });
  });

  // Dynamic image input logic with limits
  var addBtn = document.getElementById('add-image-btn');
  var inputsDiv = document.getElementById('dynamic-image-inputs');
  var preview = document.getElementById('uploaded-images-preview');
  let inputCount = 0;
  const MAX_IMAGES = 20;
  const MAX_SIZE_MB = 10;
  function getCurrentImageCount() {
    let existing = document.querySelectorAll('#existing-images-preview .group:not([style*="display: none"])').length;
    let newInputs = inputsDiv.querySelectorAll('input[type="file"]');
    return existing + newInputs.length;
  }
  if (addBtn && inputsDiv && preview) {
    addBtn.addEventListener('click', function() {
      if (getCurrentImageCount() >= MAX_IMAGES) {
        alert('Máximo de 20 imagens por item.');
        return;
      }
      inputCount++;
      var wrapper = document.createElement('div');
      wrapper.className = 'relative group';
      wrapper.style.display = 'inline-block';
      var input = document.createElement('input');
      input.type = 'file';
      input.name = 'product[images][]';
      input.accept = 'image/*';
      input.setAttribute('data-direct-upload', 'true');
      input.setAttribute('capture', 'environment');
      input.className = 'block border border-gray-300 rounded px-3 py-2 mb-1';
      input.style.width = '180px';
      input.style.maxWidth = '100%';
      input.addEventListener('change', function(e) {
        if (input.files && input.files[0]) {
          var file = input.files[0];
          if (!file.type.startsWith('image/')) {
            alert('Apenas arquivos de imagem são permitidos.');
            input.value = '';
            return;
          }
          if (file.size > MAX_SIZE_MB * 1024 * 1024) {
            alert('Cada imagem deve ter no máximo 10MB.');
            input.value = '';
            return;
          }
          var reader = new FileReader();
          reader.onload = function(ev) {
            let img = wrapper.querySelector('img');
            if (!img) {
              img = document.createElement('img');
              img.className = 'rounded border w-24 h-24 object-cover mt-1';
              wrapper.appendChild(img);
            }
            img.src = ev.target.result;
          };
          reader.readAsDataURL(file);
        }
      });
      var removeBtn = document.createElement('button');
      removeBtn.type = 'button';
      removeBtn.className = 'absolute top-0 right-0 bg-white bg-opacity-80 rounded-full p-1 m-1 shadow text-red-600 hover:bg-opacity-100 transition';
      removeBtn.innerHTML = '<i class="fa fa-times"></i>';
      removeBtn.onclick = function() {
        wrapper.remove();
      };
      wrapper.appendChild(input);
      wrapper.appendChild(removeBtn);
      inputsDiv.appendChild(wrapper);
    });
  }
});
</script>
