<%= form_with(model: product, local: true, html: { class: 'space-y-6 bg-white p-6 rounded shadow max-w-xl mx-auto', multipart: true, data: { direct_upload: true } }) do |form| %>
  <% if product.errors.any? %>
    <div class="mb-4 p-4 rounded bg-red-100 text-red-800 border border-red-200">
      <h2 class="font-bold mb-2"><%= pluralize(product.errors.count, "erro") %> proibiu este produto de ser salvo:</h2>
      <ul class="list-disc pl-5">
        <% product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <div>
    <%= form.label :name, t('products.form.name'), class: 'block font-medium text-gray-700 mb-1' %>
    <%= form.text_field :name, class: 'block w-full border border-gray-300 rounded px-3 py-2', required: true %>
  </div>
  <div>
    <%= form.label :details, t('products.form.details'), class: 'block font-medium text-gray-700 mb-1' %>
    <%= form.rich_text_area :details, class: 'block w-full border border-gray-300 rounded px-3 py-2 trix-content' %>
  </div>
  <div>
    <%= form.label :price, t('products.form.price'), class: 'block font-medium text-gray-700 mb-1' %>
    <%= form.text_field :price, type: 'number', inputmode: 'decimal', step: '0.01', min: '0', class: 'block w-full border border-gray-300 rounded px-3 py-2', id: 'product_price', autocomplete: 'off', required: true %>
  </div>
  <div>
    <%= form.label :images, t('products.form.images', default: 'Imagens'), class: 'block font-medium text-gray-700 mb-1' %>
    <div id="uploaded-images-preview" class="flex flex-wrap gap-4 mt-2"></div>
    <% if product.images.attached? %>
      <div class="flex flex-wrap gap-4 mt-4" id="existing-images-preview">
        <% product.images.each do |image| %>
          <div class="relative group">
            <%= image_tag image.variant(resize_to_limit: [120, 120]), class: 'rounded border w-24 h-24 object-cover' %>
            <button type="button" class="absolute top-0 right-0 bg-white bg-opacity-80 rounded-full p-1 m-1 shadow text-red-600 hover:bg-opacity-100 transition remove-image-btn" data-image-id="<%= image.id %>">
              <i class="fa fa-times"></i>
            </button>
            <%= form.hidden_field :remove_image_ids, value: '', id: "remove_image_ids_#{image.id}" %>
          </div>
        <% end %>
      </div>
    <% end %>
    <input type="file" id="product-images-input" name="product[images][]" accept="image/*" multiple data-direct-upload="true" class="hidden block border border-gray-300 rounded px-3 py-2 mt-2 w-full" style="max-width: 100%;" />
    <button type="button" id="add-image-btn" class="mt-2 px-4 py-2 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition"><i class="fa fa-plus mr-1"></i>Adicionar imagem</button>
    <div class="text-sm text-gray-500 mt-2">Máximo de 20 imagens, cada uma até 10MB. Apenas arquivos de imagem são permitidos.<br>Em dispositivos móveis, você pode tirar uma foto ou escolher da galeria. O navegador pode pedir permissão para acessar a câmera ou arquivos.</div>
    <!-- Modal for mobile image source selection -->
    <div id="image-source-modal" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 hidden">
      <div class="bg-white rounded-lg shadow-lg w-11/12 max-w-xs mx-auto p-0 overflow-hidden relative">
        <button id="close-image-source-modal-x" class="absolute top-2 right-2 w-8 h-8 flex items-center justify-center rounded-full bg-gray-200 hover:bg-gray-300 text-gray-600 text-xl focus:outline-none" aria-label="Fechar">
          <i class="fa fa-times"></i>
        </button>
        <table class="w-full text-center mt-2">
          <tbody>
            <tr class="border-b cursor-pointer hover:bg-gray-100" id="choose-camera-row">
              <td class="py-4 text-lg font-medium"><i class="fa fa-camera mr-2"></i>Tirar foto com a Câmera</td>
            </tr>
            <tr class="cursor-pointer hover:bg-gray-100" id="choose-gallery-row">
              <td class="py-4 text-lg font-medium"><i class="fa fa-image mr-2"></i>Abrir Galeria</td>
            </tr>
          </tbody>
        </table>
        <button id="close-image-source-modal" class="block w-full py-3 text-gray-500 hover:text-gray-700 border-t">Cancelar</button>
      </div>
    </div>
  </div>
  <div>
    <%= form.submit t('products.form.submit'), class: 'px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition hidden sm:inline-block' %>
  </div>
<% end %>
<script>
function setupProductFormImageUpload() {
  // Remove image logic
  document.querySelectorAll('.remove-image-btn').forEach(function(btn) {
    btn.addEventListener('click', function() {
      var imageId = btn.getAttribute('data-image-id');
      var hiddenField = document.getElementById('remove_image_ids_' + imageId);
      if (hiddenField) {
        hiddenField.value = imageId;
        btn.closest('.group').style.display = 'none';
      }
    });
  });

  var input = document.getElementById('product-images-input');
  var preview = document.getElementById('uploaded-images-preview');
  var addBtn = document.getElementById('add-image-btn');
  const MAX_IMAGES = 20;
  const MAX_SIZE_MB = 10;

  function getCurrentImageCount() {
    let existing = document.querySelectorAll('#existing-images-preview .group:not([style*="display: none"])').length;
    let newFiles = input && input.files ? input.files.length : 0;
    return existing + newFiles;
  }

  if (input) {
    input.addEventListener('change', function(e) {
      preview.innerHTML = '';
      let files = Array.from(input.files);
      if (getCurrentImageCount() > MAX_IMAGES) {
        alert('Máximo de 20 imagens por item.');
        input.value = '';
        return;
      }
      files.forEach(function(file) {
        if (!file.type.startsWith('image/')) {
          alert('Apenas arquivos de imagem são permitidos.');
          input.value = '';
          return;
        }
        if (file.size > MAX_SIZE_MB * 1024 * 1024) {
          alert('Cada imagem deve ter no máximo 10MB.');
          input.value = '';
          return;
        }
        var reader = new FileReader();
        reader.onload = function(ev) {
          var img = document.createElement('img');
          img.className = 'rounded border w-24 h-24 object-cover mt-1';
          img.src = ev.target.result;
          preview.appendChild(img);
        };
        reader.readAsDataURL(file);
      });
    });
  }

  // Mobile: modal for Gallery or Camera
  var modal = document.getElementById('image-source-modal');
  var cameraRow = document.getElementById('choose-camera-row');
  var galleryRow = document.getElementById('choose-gallery-row');
  var closeModalBtn = document.getElementById('close-image-source-modal');
  var closeModalBtnX = document.getElementById('close-image-source-modal-x');

  if (addBtn && input) {
    addBtn.addEventListener('click', function(e) {
      if (window.matchMedia && window.matchMedia('(max-width: 640px)').matches) {
        // Mobile: show modal
        modal.classList.remove('hidden');
        // Prevent background scroll
        document.body.style.overflow = 'hidden';
      } else {
        // Desktop: just open file picker
        input.setAttribute('multiple', 'multiple');
        input.removeAttribute('capture');
        input.click();
      }
    });
  }

  if (modal && cameraRow && galleryRow && closeModalBtn && input) {
    cameraRow.onclick = function() {
      input.removeAttribute('multiple');
      input.setAttribute('capture', 'environment');
      modal.classList.add('hidden');
      document.body.style.overflow = '';
      input.click();
    };
    galleryRow.onclick = function() {
      input.setAttribute('multiple', 'multiple');
      input.removeAttribute('capture');
      modal.classList.add('hidden');
      document.body.style.overflow = '';
      input.click();
    };
    closeModalBtn.onclick = function(e) {
      e.preventDefault();
      e.stopPropagation();
      modal.classList.add('hidden');
      document.body.style.overflow = '';
    };
    if (closeModalBtnX) {
      closeModalBtnX.onclick = function(e) {
        e.preventDefault();
        e.stopPropagation();
        modal.classList.add('hidden');
        document.body.style.overflow = '';
      };
    }
    // Dismiss modal on outside click
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        modal.classList.add('hidden');
        document.body.style.overflow = '';
      }
    });
  }
}
document.addEventListener('turbo:load', setupProductFormImageUpload);
document.addEventListener('DOMContentLoaded', setupProductFormImageUpload);
</script>
